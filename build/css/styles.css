/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type=checkbox],
[type=radio] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type=search] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}

:root {
  --bg-color: #fafafa;
  --color-white: #ffffff;
  --color-black: #000000;
  --text-color-default: #212529;
  --text-color-dark: #000000;
  --text-color-gray: #686868;
  --text-color-light-gray: #A6A6A6;
}

@font-face {
  font-family: "Roboto";
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url("../fonts/robotoregular.woff2") format("woff2");
}
html {
  box-sizing: border-box;
  scroll-behavior: smooth;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

body {
  font-family: "Roboto", "Arial", sans-serif;
  font-size: 16px;
  font-weight: 400;
  line-height: 1.5;
  color: var(--text-color-default);
  -webkit-font-smoothing: antialiased;
}

img {
  display: block;
  max-width: 100%;
  height: auto;
}

a {
  text-decoration: none;
}

.body-lock {
  overflow: hidden;
  position: fixed;
  width: 100%;
}

.visually-hidden {
  position: absolute;
  overflow: hidden;
  clip: rect(0 0 0 0);
  height: 1px;
  width: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
}

.container {
  max-width: 1440px;
  width: 100%;
  margin: 0 auto;
  padding-left: 100px;
  padding-right: 100px;
}
@media (max-width: 1200px) {
  .container {
    padding-left: 30px;
    padding-right: 30px;
  }
}
@media (max-width: 768px) {
  .container {
    padding-left: 15px;
    padding-right: 15px;
  }
}

.btn {
  border: 0;
  outline: 0;
  background-color: transparent;
  text-decoration: none;
  font-size: inherit;
  font-weight: inherit;
  font-family: inherit;
  color: inherit;
  padding: 0;
  -webkit-tap-highlight-color: transparent;
  display: inline-flex;
  padding: 10px 20px;
  border: 2px solid var(--color-black);
  border-radius: 25px;
  background-color: var(--color-black);
  color: var(--color-white);
  font-size: 15px;
  line-height: 1.3;
  transition: background-color 0.3s linear, color 0.3s linear;
  cursor: pointer;
  text-align: center;
}
@media (min-width: 576px) {
  .btn {
    padding: 10px 30px;
  }
}
.btn:hover {
  background-color: var(--color-white);
  color: var(--text-color-dark);
}
.btn--transparent {
  border: none;
  background-color: transparent;
  color: var(--text-color-dark);
}
.btn--transparent:hover {
  background-color: transparent;
  text-decoration: underline;
}

@media (min-width: 768px) {
  .logo {
    width: 100px;
    height: 35px;
  }
}
@media (min-width: 992px) {
  .logo {
    width: 112px;
    height: 39px;
  }
}
.logo svg {
  display: block;
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}

.burger {
  --burger-padding: 10px;
  border: 0;
  outline: 0;
  background-color: transparent;
  text-decoration: none;
  font-size: inherit;
  font-weight: inherit;
  font-family: inherit;
  color: inherit;
  padding: 0;
  -webkit-tap-highlight-color: transparent;
  position: relative;
  width: 50px;
  height: 50px;
  padding: var(--burger-padding);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin-left: auto;
  z-index: 1;
  cursor: pointer;
}
@media (min-width: 768px) {
  .burger {
    display: none;
  }
}
.burger--open .burger__line:nth-child(1) {
  transform: translateY(0) rotate(45deg);
}
.burger--open .burger__line:nth-child(2) {
  opacity: 0;
}
.burger--open .burger__line:nth-child(3) {
  transform: translateY(0) rotate(-45deg);
}
.burger__line {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  height: 3px;
  width: calc(100% - var(--burger-padding) * 2);
  background-color: var(--text-color-dark);
  margin: auto;
  transition: all 0.3s linear;
}
.burger__line:nth-child(1) {
  transform: translateY(-8px);
}
.burger__line:nth-child(3) {
  transform: translateY(8px);
}

.title {
  text-align: center;
}
.title__top {
  margin: 0 0 5px 0;
  font-size: 16px;
  line-height: 1.2;
  color: var(--text-color-light-gray);
}
.title__bottom {
  margin: 0 auto;
  font-weight: 400;
  color: var(--text-color-dark);
  font-size: 24px;
  line-height: 1.2;
  max-width: 1026px;
}
@media (min-width: 576px) {
  .title__bottom {
    font-size: 36px;
  }
}
@media (min-width: 768px) {
  .title__bottom {
    font-size: 46px;
  }
}
@media (min-width: 992px) {
  .title__bottom {
    font-size: 54px;
  }
}
@media (min-width: 1200px) {
  .title__bottom {
    font-size: 61px;
  }
}

.header {
  padding-top: 15px;
  padding-bottom: 15px;
}
@media (min-width: 992px) {
  .header {
    padding-top: 25px;
    padding-bottom: 25px;
  }
}
.header__container {
  display: flex;
  align-items: center;
}
.header__logo {
  z-index: 2;
}

.main-nav {
  position: fixed;
  width: 100%;
  height: 100vh;
  top: 0;
  left: -100%;
  background-color: var(--color-white);
  transition: transform 0.3s linear;
  padding-top: 80px;
  z-index: 1;
}
@media (min-width: 768px) {
  .main-nav {
    position: static;
    width: auto;
    height: auto;
    top: auto;
    left: auto;
    padding: 0;
    margin-left: auto;
  }
}
.main-nav--open {
  transform: translateX(100%);
}
@media (min-width: 768px) {
  .main-nav--open {
    transform: translateX(0);
  }
}
.main-nav__list {
  padding: 0;
  margin: 0;
  list-style: none;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  padding-top: 20px;
  padding-bottom: 20px;
  overflow-y: auto;
}
@media (min-width: 768px) {
  .main-nav__list {
    padding: 0;
    flex-direction: row;
    padding-right: 15px;
  }
}
.main-nav__item:not(:last-child) {
  margin-bottom: 10px;
}
@media (min-width: 768px) {
  .main-nav__item:not(:last-child) {
    margin-bottom: 0;
  }
}
.main-nav .btn--transparent {
  padding-left: 10px;
  padding-right: 10px;
}
@media (min-width: 768px) {
  .main-nav .btn--transparent {
    margin-right: 20px;
  }
}

.intro {
  padding-top: 15px;
  padding-bottom: 30px;
}
@media (min-width: 992px) {
  .intro {
    padding-top: 54px;
    padding-bottom: 100px;
  }
}
.intro__main-title {
  margin-bottom: 15px;
}
@media (min-width: 992px) {
  .intro__main-title {
    margin-bottom: 23px;
  }
}
.intro__main-title .title__bottom {
  line-height: 1.25;
}
.intro__subtitle {
  margin-bottom: 45px;
}
@media (min-width: 992px) {
  .intro__subtitle {
    margin-bottom: 90px;
  }
}
.intro__subtitle .title__bottom {
  text-align: left;
}
.intro__text {
  max-width: 717px;
  margin: 0 auto 20px;
  text-align: center;
}
@media (min-width: 992px) {
  .intro__text {
    margin-bottom: 36px;
  }
}
.intro__controls {
  display: flex;
  justify-content: center;
  align-items: center;
  margin-bottom: 30px;
}
@media (min-width: 992px) {
  .intro__controls {
    margin-bottom: 55px;
  }
}
.intro__request-btn {
  margin-right: 10px;
}
.intro__benefits-list {
  padding: 0;
  margin: 0;
  list-style: none;
  max-width: 330px;
  margin: 0 auto 40px;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}
@media (min-width: 768px) {
  .intro__benefits-list {
    flex-direction: row;
    max-width: 960px;
  }
}
.intro__benefits-item {
  position: relative;
  color: var(--text-color-gray);
  padding-left: 29px;
}
.intro__benefits-item:not(:last-child) {
  margin-bottom: 10px;
}
@media (min-width: 768px) {
  .intro__benefits-item:not(:last-child) {
    margin-bottom: 0;
  }
}
.intro__benefits-item::before {
  content: "";
  position: absolute;
  top: 3px;
  left: 0;
  width: 19px;
  height: 14px;
  background-image: url("../img/check.svg");
}
.intro__top-img-wrap {
  margin-bottom: 70px;
}
.intro__bottom-img-wrap {
  max-width: 817px;
  margin: 0 auto;
  background-color: var(--color-white);
}

.steps {
  background-color: var(--bg-color);
  padding-top: 35px;
  padding-bottom: 47px;
}
.steps__main-title {
  margin-bottom: 40px;
}
@media (min-width: 992px) {
  .steps__main-title {
    margin-bottom: 60px;
  }
}
@media (min-width: 1200px) {
  .steps__main-title {
    margin-bottom: 95px;
  }
}
.steps__list {
  padding: 0;
  margin: 0;
  list-style: none;
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
}
@media (min-width: 768px) {
  .steps__list {
    justify-content: space-around;
  }
}
@media (min-width: 1200px) {
  .steps__list {
    justify-content: space-between;
  }
}
.steps__item {
  width: 100%;
  max-width: 395px;
}
.steps__item:not(:last-child) {
  margin-bottom: 40px;
}
@media (min-width: 1200px) {
  .steps__item:not(:last-child) {
    margin-bottom: 0;
  }
}
@media (min-width: 768px) {
  .steps__item {
    width: calc((100% - 30px) / 2);
  }
}
@media (min-width: 1200px) {
  .steps__item {
    width: calc((100% - 60px) / 3);
  }
}
.steps__item-img-wrap {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 210px;
  margin-bottom: 10px;
}
@media (min-width: 1200px) {
  .steps__item-img-wrap {
    margin-bottom: 40px;
  }
}
.steps__item-title {
  margin: 0 0 12px 0;
  font-size: 20px;
  line-height: 1.2;
}
.steps__item-text {
  margin: 0;
}

.info {
  padding-top: 30px;
  padding-bottom: 30px;
}
@media (min-width: 768px) {
  .info {
    padding-top: 60px;
    padding-bottom: 60px;
  }
}
@media (min-width: 1200px) {
  .info {
    padding-top: 80px;
    padding-bottom: 100px;
  }
}
.info--second .info__inner {
  background-color: var(--bg-color);
  padding: 30px 15px;
  border-radius: 10px;
}
@media (min-width: 992px) {
  .info--second .info__inner {
    border-radius: 25px;
    padding: 90px 22px 90px 75px;
  }
}
@media (min-width: 992px) {
  .info--second .info__desc {
    max-width: 52%;
    padding-left: 15px;
  }
}
@media (min-width: 992px) {
  .info--second .info__pic {
    max-width: 48%;
  }
}
.info__inner {
  display: flex;
  flex-direction: column;
  align-items: center;
}
@media (min-width: 992px) {
  .info__inner {
    flex-direction: row;
    justify-content: space-between;
  }
}
.info__title {
  margin-bottom: 23px;
}
@media (min-width: 992px) {
  .info__title {
    text-align: left;
  }
}
.info__desc {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-bottom: 30px;
}
@media (min-width: 992px) {
  .info__desc {
    max-width: 50.6%;
    align-items: start;
    padding-right: 15px;
    margin-bottom: 0;
  }
}
@media (min-width: 992px) {
  .info__pic {
    max-width: 49%;
  }
}
.info__text {
  text-align: center;
  margin: 0 0 16px 0;
  max-width: 520px;
}
@media (min-width: 992px) {
  .info__text {
    text-align: left;
  }
}
.info__request-btn {
  text-align: center;
}

.footer {
  padding-bottom: 30px;
}
@media (min-width: 992px) {
  .footer {
    padding-bottom: 40px;
  }
}
.footer__inner {
  border-top: 1px solid #e5e5e5;
  padding-top: 30px;
  display: flex;
  flex-direction: column-reverse;
}
@media (min-width: 576px) {
  .footer__inner {
    flex-direction: row;
    justify-content: space-between;
  }
}
@media (min-width: 992px) {
  .footer__inner {
    padding-top: 40px;
  }
}
.footer__info-col {
  width: 200px;
  color: var(--text-color-light-gray);
  margin: 0 auto;
  display: flex;
  flex-direction: column;
  align-items: center;
}
@media (min-width: 576px) {
  .footer__info-col {
    margin: 0;
    margin-right: 15px;
    width: 210px;
    align-items: start;
  }
}
.footer__logo {
  width: 80px;
  height: auto;
  margin-bottom: 10px;
}
@media (min-width: 768px) {
  .footer__logo {
    width: 100px;
  }
}
@media (min-width: 992px) {
  .footer__logo {
    width: 130px;
  }
}
.footer__text {
  margin: 0 0 20px 0;
  text-align: center;
}
@media (min-width: 576px) {
  .footer__text {
    text-align: left;
  }
}
.footer__cp {
  margin: 0;
  font-size: 13px;
  text-align: center;
}
@media (min-width: 576px) {
  .footer__cp {
    text-align: left;
  }
}
.footer__nav-col {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  margin-bottom: 40px;
}
@media (min-width: 576px) {
  .footer__nav-col {
    margin-bottom: 0;
    padding-top: 10px;
  }
}
@media (min-width: 768px) {
  .footer__nav-col {
    margin-right: 8px;
  }
}
.footer__nav-item {
  width: 45%;
}
@media (min-width: 430px) {
  .footer__nav-item {
    width: 33.33%;
  }
}
@media (min-width: 576px) {
  .footer__nav-item {
    width: auto;
  }
}
.footer__nav-item:not(:last-child) {
  margin-bottom: 30px;
}
@media (min-width: 576px) {
  .footer__nav-item:not(:last-child) {
    margin-bottom: 0;
    margin-right: 20px;
  }
}
@media (min-width: 620px) {
  .footer__nav-item:not(:last-child) {
    margin-right: 35px;
  }
}
@media (min-width: 768px) {
  .footer__nav-item:not(:last-child) {
    margin-right: 50px;
  }
}
@media (min-width: 992px) {
  .footer__nav-item:not(:last-child) {
    margin-right: 92px;
  }
}
.footer__nav-item-title {
  color: var(--text-color-light-gray);
  font-size: 15px;
  line-height: 1.28;
  margin: 0 0 9px 0;
  font-weight: 400;
}
.footer__list {
  padding: 0;
  margin: 0;
  list-style: none;
}
.footer__item:not(:last-child) {
  margin-bottom: 9px;
}
.footer__item-link {
  font-size: 15px;
  color: var(--text-color-dark);
}
.footer__item-link:hover {
  text-decoration: underline;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
